package WebRequirementsMetamodel.diagram.providers;

/**
 * @generated
 */
public class WebRequirementsMetamodelModelingAssistantProvider
		extends org.eclipse.gmf.runtime.emf.ui.services.modelingassistant.ModelingAssistantProvider {

		/**
 * @generated
 */
	public java.util.List getTypesForPopupBar(org.eclipse.core.runtime.IAdaptable host) {
		org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart editPart =
				(org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart) host.getAdapter(
						org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart.class);
							if (editPart instanceof WebRequirementsMetamodel.diagram.edit.parts.SDEditPart) {
			java.util.ArrayList<org.eclipse.gmf.runtime.emf.type.core.IElementType> types = new java.util.ArrayList<org.eclipse.gmf.runtime.emf.type.core.IElementType>(8);
							types.add(WebRequirementsMetamodel.diagram.providers.WebRequirementsMetamodelElementTypes.Content_2001);
							types.add(WebRequirementsMetamodel.diagram.providers.WebRequirementsMetamodelElementTypes.Navigational_2002);
							types.add(WebRequirementsMetamodel.diagram.providers.WebRequirementsMetamodelElementTypes.Personalization_2003);
							types.add(WebRequirementsMetamodel.diagram.providers.WebRequirementsMetamodelElementTypes.Goal_2004);
							types.add(WebRequirementsMetamodel.diagram.providers.WebRequirementsMetamodelElementTypes.Softgoal_2005);
							types.add(WebRequirementsMetamodel.diagram.providers.WebRequirementsMetamodelElementTypes.Service_2006);
							types.add(WebRequirementsMetamodel.diagram.providers.WebRequirementsMetamodelElementTypes.Actor_2007);
							types.add(WebRequirementsMetamodel.diagram.providers.WebRequirementsMetamodelElementTypes.Layout_2008);
							return types;
		}
																																															return java.util.Collections.EMPTY_LIST;
	}

		/**
 * @generated
 */
	public java.util.List getRelTypesOnSource(org.eclipse.core.runtime.IAdaptable source) {
		org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart sourceEditPart =
				(org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart) source.getAdapter(
						org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart.class);
							if (sourceEditPart instanceof WebRequirementsMetamodel.diagram.edit.parts.ContentEditPart) {
			return ((WebRequirementsMetamodel.diagram.edit.parts.ContentEditPart) sourceEditPart).getMARelTypesOnSource();
		}
										if (sourceEditPart instanceof WebRequirementsMetamodel.diagram.edit.parts.NavigationalEditPart) {
			return ((WebRequirementsMetamodel.diagram.edit.parts.NavigationalEditPart) sourceEditPart).getMARelTypesOnSource();
		}
										if (sourceEditPart instanceof WebRequirementsMetamodel.diagram.edit.parts.PersonalizationEditPart) {
			return ((WebRequirementsMetamodel.diagram.edit.parts.PersonalizationEditPart) sourceEditPart).getMARelTypesOnSource();
		}
										if (sourceEditPart instanceof WebRequirementsMetamodel.diagram.edit.parts.GoalEditPart) {
			return ((WebRequirementsMetamodel.diagram.edit.parts.GoalEditPart) sourceEditPart).getMARelTypesOnSource();
		}
										if (sourceEditPart instanceof WebRequirementsMetamodel.diagram.edit.parts.SoftgoalEditPart) {
			return ((WebRequirementsMetamodel.diagram.edit.parts.SoftgoalEditPart) sourceEditPart).getMARelTypesOnSource();
		}
										if (sourceEditPart instanceof WebRequirementsMetamodel.diagram.edit.parts.ServiceEditPart) {
			return ((WebRequirementsMetamodel.diagram.edit.parts.ServiceEditPart) sourceEditPart).getMARelTypesOnSource();
		}
															if (sourceEditPart instanceof WebRequirementsMetamodel.diagram.edit.parts.LayoutEditPart) {
			return ((WebRequirementsMetamodel.diagram.edit.parts.LayoutEditPart) sourceEditPart).getMARelTypesOnSource();
		}
							return java.util.Collections.EMPTY_LIST;
	}

		/**
 * @generated
 */
	public java.util.List getRelTypesOnTarget(org.eclipse.core.runtime.IAdaptable target) {
		org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart targetEditPart =
				(org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart) target.getAdapter(
						org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart.class);
							if (targetEditPart instanceof WebRequirementsMetamodel.diagram.edit.parts.ContentEditPart) {
			return ((WebRequirementsMetamodel.diagram.edit.parts.ContentEditPart) targetEditPart).getMARelTypesOnTarget();
		}
										if (targetEditPart instanceof WebRequirementsMetamodel.diagram.edit.parts.NavigationalEditPart) {
			return ((WebRequirementsMetamodel.diagram.edit.parts.NavigationalEditPart) targetEditPart).getMARelTypesOnTarget();
		}
										if (targetEditPart instanceof WebRequirementsMetamodel.diagram.edit.parts.PersonalizationEditPart) {
			return ((WebRequirementsMetamodel.diagram.edit.parts.PersonalizationEditPart) targetEditPart).getMARelTypesOnTarget();
		}
										if (targetEditPart instanceof WebRequirementsMetamodel.diagram.edit.parts.GoalEditPart) {
			return ((WebRequirementsMetamodel.diagram.edit.parts.GoalEditPart) targetEditPart).getMARelTypesOnTarget();
		}
										if (targetEditPart instanceof WebRequirementsMetamodel.diagram.edit.parts.SoftgoalEditPart) {
			return ((WebRequirementsMetamodel.diagram.edit.parts.SoftgoalEditPart) targetEditPart).getMARelTypesOnTarget();
		}
										if (targetEditPart instanceof WebRequirementsMetamodel.diagram.edit.parts.ServiceEditPart) {
			return ((WebRequirementsMetamodel.diagram.edit.parts.ServiceEditPart) targetEditPart).getMARelTypesOnTarget();
		}
															if (targetEditPart instanceof WebRequirementsMetamodel.diagram.edit.parts.LayoutEditPart) {
			return ((WebRequirementsMetamodel.diagram.edit.parts.LayoutEditPart) targetEditPart).getMARelTypesOnTarget();
		}
							return java.util.Collections.EMPTY_LIST;
	}

		/**
 * @generated
 */
	public java.util.List getRelTypesOnSourceAndTarget(
			org.eclipse.core.runtime.IAdaptable source, org.eclipse.core.runtime.IAdaptable target) {
		org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart sourceEditPart =
				(org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart) source.getAdapter(
						org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart.class);
		org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart targetEditPart =
				(org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart) target.getAdapter(
						org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart.class);
							if (sourceEditPart instanceof WebRequirementsMetamodel.diagram.edit.parts.ContentEditPart) {
			return ((WebRequirementsMetamodel.diagram.edit.parts.ContentEditPart) sourceEditPart).getMARelTypesOnSourceAndTarget(targetEditPart);
		}
										if (sourceEditPart instanceof WebRequirementsMetamodel.diagram.edit.parts.NavigationalEditPart) {
			return ((WebRequirementsMetamodel.diagram.edit.parts.NavigationalEditPart) sourceEditPart).getMARelTypesOnSourceAndTarget(targetEditPart);
		}
										if (sourceEditPart instanceof WebRequirementsMetamodel.diagram.edit.parts.PersonalizationEditPart) {
			return ((WebRequirementsMetamodel.diagram.edit.parts.PersonalizationEditPart) sourceEditPart).getMARelTypesOnSourceAndTarget(targetEditPart);
		}
										if (sourceEditPart instanceof WebRequirementsMetamodel.diagram.edit.parts.GoalEditPart) {
			return ((WebRequirementsMetamodel.diagram.edit.parts.GoalEditPart) sourceEditPart).getMARelTypesOnSourceAndTarget(targetEditPart);
		}
										if (sourceEditPart instanceof WebRequirementsMetamodel.diagram.edit.parts.SoftgoalEditPart) {
			return ((WebRequirementsMetamodel.diagram.edit.parts.SoftgoalEditPart) sourceEditPart).getMARelTypesOnSourceAndTarget(targetEditPart);
		}
										if (sourceEditPart instanceof WebRequirementsMetamodel.diagram.edit.parts.ServiceEditPart) {
			return ((WebRequirementsMetamodel.diagram.edit.parts.ServiceEditPart) sourceEditPart).getMARelTypesOnSourceAndTarget(targetEditPart);
		}
															if (sourceEditPart instanceof WebRequirementsMetamodel.diagram.edit.parts.LayoutEditPart) {
			return ((WebRequirementsMetamodel.diagram.edit.parts.LayoutEditPart) sourceEditPart).getMARelTypesOnSourceAndTarget(targetEditPart);
		}
							return java.util.Collections.EMPTY_LIST;
	}

		/**
 * @generated
 */
	public java.util.List getTypesForSource(org.eclipse.core.runtime.IAdaptable target,
			org.eclipse.gmf.runtime.emf.type.core.IElementType relationshipType) {
		org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart targetEditPart =
				(org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart) target.getAdapter(
						org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart.class);
							if (targetEditPart instanceof WebRequirementsMetamodel.diagram.edit.parts.ContentEditPart) {
			return ((WebRequirementsMetamodel.diagram.edit.parts.ContentEditPart) targetEditPart).getMATypesForSource(relationshipType);
		}
										if (targetEditPart instanceof WebRequirementsMetamodel.diagram.edit.parts.NavigationalEditPart) {
			return ((WebRequirementsMetamodel.diagram.edit.parts.NavigationalEditPart) targetEditPart).getMATypesForSource(relationshipType);
		}
										if (targetEditPart instanceof WebRequirementsMetamodel.diagram.edit.parts.PersonalizationEditPart) {
			return ((WebRequirementsMetamodel.diagram.edit.parts.PersonalizationEditPart) targetEditPart).getMATypesForSource(relationshipType);
		}
										if (targetEditPart instanceof WebRequirementsMetamodel.diagram.edit.parts.GoalEditPart) {
			return ((WebRequirementsMetamodel.diagram.edit.parts.GoalEditPart) targetEditPart).getMATypesForSource(relationshipType);
		}
										if (targetEditPart instanceof WebRequirementsMetamodel.diagram.edit.parts.SoftgoalEditPart) {
			return ((WebRequirementsMetamodel.diagram.edit.parts.SoftgoalEditPart) targetEditPart).getMATypesForSource(relationshipType);
		}
										if (targetEditPart instanceof WebRequirementsMetamodel.diagram.edit.parts.ServiceEditPart) {
			return ((WebRequirementsMetamodel.diagram.edit.parts.ServiceEditPart) targetEditPart).getMATypesForSource(relationshipType);
		}
															if (targetEditPart instanceof WebRequirementsMetamodel.diagram.edit.parts.LayoutEditPart) {
			return ((WebRequirementsMetamodel.diagram.edit.parts.LayoutEditPart) targetEditPart).getMATypesForSource(relationshipType);
		}
							return java.util.Collections.EMPTY_LIST;
	}

		/**
 * @generated
 */
	public java.util.List getTypesForTarget(org.eclipse.core.runtime.IAdaptable source,
			org.eclipse.gmf.runtime.emf.type.core.IElementType relationshipType) {
		org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart sourceEditPart =
				(org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart) source.getAdapter(
						org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart.class);
							if (sourceEditPart instanceof WebRequirementsMetamodel.diagram.edit.parts.ContentEditPart) {
			return ((WebRequirementsMetamodel.diagram.edit.parts.ContentEditPart) sourceEditPart).getMATypesForTarget(relationshipType);
		}
										if (sourceEditPart instanceof WebRequirementsMetamodel.diagram.edit.parts.NavigationalEditPart) {
			return ((WebRequirementsMetamodel.diagram.edit.parts.NavigationalEditPart) sourceEditPart).getMATypesForTarget(relationshipType);
		}
										if (sourceEditPart instanceof WebRequirementsMetamodel.diagram.edit.parts.PersonalizationEditPart) {
			return ((WebRequirementsMetamodel.diagram.edit.parts.PersonalizationEditPart) sourceEditPart).getMATypesForTarget(relationshipType);
		}
										if (sourceEditPart instanceof WebRequirementsMetamodel.diagram.edit.parts.GoalEditPart) {
			return ((WebRequirementsMetamodel.diagram.edit.parts.GoalEditPart) sourceEditPart).getMATypesForTarget(relationshipType);
		}
										if (sourceEditPart instanceof WebRequirementsMetamodel.diagram.edit.parts.SoftgoalEditPart) {
			return ((WebRequirementsMetamodel.diagram.edit.parts.SoftgoalEditPart) sourceEditPart).getMATypesForTarget(relationshipType);
		}
										if (sourceEditPart instanceof WebRequirementsMetamodel.diagram.edit.parts.ServiceEditPart) {
			return ((WebRequirementsMetamodel.diagram.edit.parts.ServiceEditPart) sourceEditPart).getMATypesForTarget(relationshipType);
		}
															if (sourceEditPart instanceof WebRequirementsMetamodel.diagram.edit.parts.LayoutEditPart) {
			return ((WebRequirementsMetamodel.diagram.edit.parts.LayoutEditPart) sourceEditPart).getMATypesForTarget(relationshipType);
		}
							return java.util.Collections.EMPTY_LIST;
	}

		/**
 * @generated
 */
	public org.eclipse.emf.ecore.EObject selectExistingElementForSource(
			org.eclipse.core.runtime.IAdaptable target,
			org.eclipse.gmf.runtime.emf.type.core.IElementType relationshipType) {
		return selectExistingElement(target, getTypesForSource(target, relationshipType));
	}

		/**
 * @generated
 */
	public org.eclipse.emf.ecore.EObject selectExistingElementForTarget(
			org.eclipse.core.runtime.IAdaptable source,
			org.eclipse.gmf.runtime.emf.type.core.IElementType relationshipType) {
		return selectExistingElement(source, getTypesForTarget(source, relationshipType));
	}

		/**
 * @generated
 */
	protected org.eclipse.emf.ecore.EObject selectExistingElement(
			org.eclipse.core.runtime.IAdaptable host, java.util.Collection types) {
		if (types.isEmpty()) {
			return null;
		}
		org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart editPart =
				(org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart) host.getAdapter(
						org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart.class);
		if (editPart == null) {
			return null;
		}
		org.eclipse.gmf.runtime.notation.Diagram diagram =
				(org.eclipse.gmf.runtime.notation.Diagram) editPart.getRoot().getContents().getModel();
		java.util.HashSet<org.eclipse.emf.ecore.EObject> elements = new java.util.HashSet<org.eclipse.emf.ecore.EObject>();
		for (java.util.Iterator<org.eclipse.emf.ecore.EObject> it = diagram.getElement().eAllContents(); it.hasNext();) {
	org.eclipse.emf.ecore.EObject element = it.next();
			if (isApplicableElement(element, types)) {
				elements.add(element);
			}
		}
		if (elements.isEmpty()) {
			return null;
		}
		return selectElement((org.eclipse.emf.ecore.EObject[]) elements.toArray(
				new org.eclipse.emf.ecore.EObject[elements.size()]));
	}

		/**
 * @generated
 */
	protected boolean isApplicableElement(org.eclipse.emf.ecore.EObject element, java.util.Collection types) {
		org.eclipse.gmf.runtime.emf.type.core.IElementType type =
				org.eclipse.gmf.runtime.emf.type.core.ElementTypeRegistry.getInstance().getElementType(element);
		return types.contains(type);
	}

		/**
 * @generated
 */
	protected org.eclipse.emf.ecore.EObject selectElement(org.eclipse.emf.ecore.EObject[] elements) {
		org.eclipse.swt.widgets.Shell shell = org.eclipse.swt.widgets.Display.getCurrent().getActiveShell();
		org.eclipse.jface.viewers.ILabelProvider labelProvider =
			new org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider(
				WebRequirementsMetamodel.diagram.part.WebRequirementsMetamodelDiagramEditorPlugin.getInstance().getItemProvidersAdapterFactory());
		org.eclipse.ui.dialogs.ElementListSelectionDialog dialog =
				new org.eclipse.ui.dialogs.ElementListSelectionDialog(shell, labelProvider);
		dialog.setMessage(WebRequirementsMetamodel.diagram.part.Messages.WebRequirementsMetamodelModelingAssistantProviderMessage);
		dialog.setTitle(WebRequirementsMetamodel.diagram.part.Messages.WebRequirementsMetamodelModelingAssistantProviderTitle);
		dialog.setMultipleSelection(false);
		dialog.setElements(elements);
		org.eclipse.emf.ecore.EObject selected = null;
		if (dialog.open() == org.eclipse.jface.window.Window.OK) {
			selected = (org.eclipse.emf.ecore.EObject) dialog.getFirstResult();
		}
		return selected;
	}
	}
